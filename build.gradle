/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'groovy'
    id 'application'
    id 'com.github.ben-manes.versions' version '0.44.0'
    id 'org.gradlex.java-ecosystem-capabilities'
    // uncomment next line when using JDK11+
    //id 'com.autonomousapps.dependency-analysis' version '1.15.0'
}

ext {
    groovyVersion = '4.0.6'
    eclipseCollectVersion = '11.1.0'
    guavaVersion = '31.1-jre'
    joolVersion = '0.9.14'
    streamExVersion = '0.8.1'
    vavrVersion = '0.10.4'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.apache.groovy:groovy:$groovyVersion"
    implementation "org.apache.groovy:groovy-macro:$groovyVersion"
    implementation "org.apache.groovy:groovy-ginq:$groovyVersion"
    implementation "org.eclipse.collections:eclipse-collections-api:$eclipseCollectVersion"
    runtimeOnly "org.eclipse.collections:eclipse-collections:$eclipseCollectVersion"
    implementation "com.google.guava:guava:$guavaVersion"
    implementation "org.jooq:jool:$joolVersion"
    implementation "one.util:streamex:$streamExVersion"
    implementation "io.vavr:vavr:$vavrVersion"
}

group = 'org.apache.groovy'
version = '1.0.0-SNAPSHOT'
description = 'Fall Fusion Kata Groovy Solutions'

tasks.withType(GroovyCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.register('runAll')

FileUtil.baseNames(sourceSets.main.allSource.files).each { name ->
    def t = tasks.register("run$name", JavaExec) {
        dependsOn compileGroovy
        group 'Application'
        description "Run ${name}.groovy as a JVM application/Groovy script"
        classpath = sourceSets.main.runtimeClasspath
        main = name
    }
    tasks.named('runAll') {
        it.dependsOn(t)
    }
}
